name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.22'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build for all platforms
      run: make build-all

    - name: Create checksums
      run: |
        cd bin
        sha256sum * > checksums.txt

    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation - in production you might want to use a tool like git-chglog
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## Changes
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          
          Download the appropriate binary for your platform from the assets below.
          
          ### Using Go install
          ```bash
          go install github.com/santif/microlib/cmd/microlib@${{ github.ref_name }}
          ```
          
          ### Using curl (Linux/macOS)
          ```bash
          curl -L https://github.com/santif/microlib/releases/download/${{ github.ref_name }}/microlib-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m) -o microlib
          chmod +x microlib
          ```
        files: |
          bin/*
        draft: false
        prerelease: ${{ contains(github.ref_name, '-') }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}