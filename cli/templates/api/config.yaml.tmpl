# {{.ServiceNameCap}} API Service Configuration

service:
  instance: "{{.ServiceName}}-1"
  build_hash: "dev"

http:
  port: 8080
  host: "0.0.0.0"
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"

{{- if .WithGRPC}}
grpc:
  port: 9090
  host: "0.0.0.0"
  max_recv_msg_size: 4194304  # 4MB
  max_send_msg_size: 4194304  # 4MB
{{- end}}

database:
  host: "localhost"
  port: 5432
  username: "postgres"
  password: "postgres"
  database: "{{.ServiceName}}_db"
  ssl_mode: "disable"
  max_open_conns: 25
  max_idle_conns: 5
  conn_max_lifetime: "5m"

{{- if .WithCache}}
cache:
  host: "localhost"
  port: 6379
  password: ""
  db: 0
  max_retries: 3
  pool_size: 10
{{- end}}

{{- if .WithMessaging}}
messaging:
  broker_type: "rabbitmq"  # or "kafka"
  rabbitmq:
    url: "amqp://guest:guest@localhost:5672/"
    exchange: "{{.ServiceName}}.events"
    queue_prefix: "{{.ServiceName}}"
  kafka:
    brokers: ["localhost:9092"]
    topic_prefix: "{{.ServiceName}}"
{{- end}}

logging:
  level: "info"
  format: "json"
  add_source: false

observability:
  service_name: "{{.ServiceName}}"
  service_version: "1.0.0"
  metrics:
    enabled: true
    port: 8080
    path: "/metrics"
  tracing:
    enabled: true
    endpoint: "http://localhost:14268/api/traces"
    sampler_ratio: 1.0
  health:
    enabled: true
    startup_timeout: "30s"
    readiness_timeout: "5s"
    liveness_timeout: "5s"