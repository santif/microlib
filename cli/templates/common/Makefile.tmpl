.PHONY: help build test run clean deps lint format docker-build docker-run

# Default target
help: ## Show this help message
	@echo 'Usage: make [target]'
	@echo ''
	@echo 'Targets:'
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "  %-15s %s\n", $$1, $$2}' $(MAKEFILE_LIST)

# Build the application
build: ## Build the application
	@echo "Building {{.ServiceName}}..."
	@go build -o bin/{{.ServiceName}} .

# Install dependencies
deps: ## Install dependencies
	@echo "Installing dependencies..."
	@go mod download
	@go mod tidy

# Run tests
test: ## Run tests
	@echo "Running tests..."
	@go test -v -race -coverprofile=coverage.out ./...
	@go tool cover -html=coverage.out -o coverage.html

# Run the application
run: ## Run the application
	@echo "Running {{.ServiceName}}..."
	@go run .

# Clean build artifacts
clean: ## Clean build artifacts
	@echo "Cleaning..."
	@rm -rf bin/
	@rm -f coverage.out coverage.html

# Lint the code
lint: ## Lint the code
	@echo "Linting..."
	@golangci-lint run

# Format the code
format: ## Format the code
	@echo "Formatting..."
	@go fmt ./...
	@goimports -w .

# Build Docker image
docker-build: ## Build Docker image
	@echo "Building Docker image..."
	@docker build -t {{.ServiceName}}:latest .

# Run with Docker Compose
docker-run: ## Run with Docker Compose
	@echo "Starting with Docker Compose..."
	@docker-compose up --build

# Stop Docker Compose
docker-stop: ## Stop Docker Compose
	@echo "Stopping Docker Compose..."
	@docker-compose down

{{- if eq .ServiceType "api" "event"}}
# Database migrations
migrate-up: ## Apply database migrations
	@echo "Applying migrations..."
	@./bin/{{.ServiceName}} migration apply

migrate-down: ## Rollback database migrations
	@echo "Rolling back migrations..."
	@./bin/{{.ServiceName}} migration rollback

# Database seeding
seed: ## Apply database seeds
	@echo "Applying seeds..."
	@./bin/{{.ServiceName}} seed apply
{{- end}}

{{- if .WithGRPC}}
# Generate protobuf files
proto: ## Generate protobuf files
	@echo "Generating protobuf files..."
	@protoc --go_out=. --go-grpc_out=. api/proto/*.proto
{{- end}}